@inject IHttpService _http
@implements IDisposable
@inject DialogService _dialog

<div class="row">
    <RadzenTemplateForm TItem="FavoriteListBO" Data="Model" Submit="AddUpdateList">
        <div class="form-group">
            <label>Name</label>
            <RadzenTextBox class="w-100" @bind-Value="Model.Name" Name="ListName"/>
            <RadzenRequiredValidator Component="ListName" Text="List name is required" />
        </div>
        <div class="form-group mb-0 float-end">
            <RadzenButton Text="@(Model.Id > 0 ? "Update List" : "Add List")" ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Primary" />
            <RadzenButton Text="Cancel" ButtonType="ButtonType.Button" ButtonStyle="ButtonStyle.Secondary" Click="@(() => _dialog.Close())" />
        </div>
    </RadzenTemplateForm>
</div>

@code {
    private CancellationTokenSource cts = new CancellationTokenSource();
    [Parameter]
    public FavoriteListBO Model { get; set; }


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    void AddUpdateList()
    {
        _favListService.Reset();
        _dialog.Close(Model);
    }

    public void Dispose()
    {
        _http.DisposeToken(cts);
    }
}
